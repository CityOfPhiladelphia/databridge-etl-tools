name: Build, test, and push docker image to ECR

on:
  push:
    branch:
      - roland-testing-2-2-22
      - ago

concurrency:
  group: testing_environment
  cancel-in-progress: false

jobs:
  build:
    name: Build and push docker container
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    # This is a github function? Ref doc: https://github.com/actions/checkout#checkout-a-different-branch
    - uses: actions/checkout@v2
      with:
        ref: roland-testing-2-2-22

  # https://github.com/marketplace/actions/microsoft-teams-deploy-card
  # Using replacement fork for toko-bifrost, context for why: https://github.com/toko-bifrost/ms-teams-deploy-card/issues/33#issuecomment-888466503 
    #- uses: toko-bifrost/ms-teams-deploy-card@master
    - uses: patrickpaulin/ms-teams-deploy-card@master
      if: always()
      with:
        GITHUB-TOKEN: ${{ github.token }}
        WEBHOOK-URI: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        card-layout-start: compact
        show-on-start: true
        show-on-exit: true
        custom-facts: |
          - name: Job Progress
            value: Building databridge-etl-tools

    
    # https://github.com/aws-actions/amazon-ecr-login
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Pull Oracle Instant Client rpm from S3
      id: pull-oracle-rpm 
      run: bash ./scripts/pull-oracle-rpm.sh
      env: 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # NOTE: normally the docker container runs as 'worker' but
    # in order to setup our testing venv we need root permissions
    # hence we run the tests as 'root' user or '-u 0'
    - name: Build docker container
      run: docker build -t airflow-dbtools-testing .

    - name: Start docker container and run pytests
      run: docker run --rm --name dbtools airflow-dbtools-testing pytest -v tests

    # https://github.com/aws-actions/amazon-ecr-login
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Docker Push to ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ECR_REPOSITORY_URL: ${{ secrets.ECR_REPOSITORY_URL }}
      run: |
        docker tag airflow-dbtools-testing:latest $ECR_REPOSITORY_URL:latest
        docker push $ECR_REPOSITORY_URL:latest
